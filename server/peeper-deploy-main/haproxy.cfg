global
  master-worker
  maxconn 2000

  user haproxy
  group haproxy

  log stdout format raw local0 info

  stats socket /run/haproxy.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  stats timeout 60s

  # Default SSL material locations
  ca-base  /usr/local/etc/ssl/certs
  crt-base /usr/local/etc/ssl/private

  # HAProxy SSL Termination
  # https://www.haproxy.com/blog/haproxy-ssl-termination/
  # generated 2025-04-12, Mozilla Guideline v5.6, HAProxy 2.8.14-c23fe91, OpenSSL 3.3.3, modern config
  # https://ssl-config.mozilla.org/#server=haproxy&version=2.8.14-c23fe91&config=modern&openssl=3.3.3&guideline=5.6

  # modern configuration
  ssl-default-bind-curves X25519:prime256v1:secp384r1
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options prefer-client-ciphers ssl-min-ver TLSv1.3 no-tls-tickets

  ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-server-options ssl-min-ver TLSv1.3 no-tls-tickets

  # curl https://ssl-config.mozilla.org/ffdhe2048.txt > /usr/local/etc/haproxy/dhparam
  ssl-dh-param-file /usr/local/etc/haproxy/dhparam

defaults
  log global
  maxconn 1000
  mode http
  option dontlognull
  option forwardfor except 127.0.0.0/8
  option forwardfor header X-Real-IP
  option http-server-close
  option httplog

  timeout client 60s
  timeout connect 5s
  timeout http-request 60s
  timeout server 60s
  timeout tunnel 3600s

resolvers docker
  nameserver dns1 127.0.0.11:53
  resolve_retries 3
  timeout resolve 1s
  timeout retry   1s
  hold nx         10s
  hold obsolete   10s
  hold other      10s
  hold refused    10s
  hold timeout    10s
  hold valid      10s

userlist credentials
  user peeper password $5$U9p3Uf0Wds2U1kdI$HIoF6GPD6HcKvGjSWnfC7e2ni3H76/IIjQpmleFp1/0

frontend "https"
  mode http
  bind :80
  bind :443 ssl crt "." alpn h2,http/1.1

  monitor-uri "/health"

  acl local_container src "172.20.0.0/20"
  acl metrics_url path_beg -i "/metrics/"

  http-request redirect scheme https code 301 unless { ssl_fc }
  http-request auth if metrics_url ! { http_auth(credentials) }
  http-request del-header X-WEBAUTH-USER
  http-request set-header X-Forwarded-Proto https
  http-request set-header X-SSL %[ssl_fc]
  http-request set-header X-WEBAUTH-USER admin if local_container
  http-response set-header Strict-Transport-Security max-age=63072000

  log-format "%ci:%cp [%tr] %ft %b/%s %TR/%Tw/%Tc/%Tr/%Ta %ST %B %CC %CS %tsc %ac/%fc/%bc/%sc/%rc %sq/%bq %hr %hs %{+Q}r"

  use_backend "metrics" if metrics_url
  default_backend "grafana"

      

frontend "stats"
  bind :8404

  http-request use-service prometheus-exporter if { path "/metrics" }

  stats enable
  stats auth "stats":"stats"
  stats hide-version
  stats refresh 10s
  stats uri "/stats"

backend "grafana"
  balance roundrobin
  cookie SERVERID insert indirect nocache
  default-server check maxconn 100 inter 1s rise 2 fall 3
  server "peeper-grafana" "peeper-grafana:3000"

backend "metrics"
  balance roundrobin
  cookie SERVERID insert indirect nocache
  default-server check maxconn 100 inter 1s rise 2 fall 3
  http-request replace-path /metrics(/)?(.*) /\2
  server "my-victoria-metrics" "my-victoria-metrics:8428"


