---
name: "peeper"

x-logging: &logging
  driver: "json-file"
  options:
    compress: "true"
    max-file: "5"
    max-size: "50m"

services:
  # --- НАЧАЛО БЛОКА НОВОЙ GRAFANA ---
  peeper-grafana:
    image: "grafana/grafana:9.5.1"
    container_name: "peeper-grafana"
    hostname: "peeper-grafana"
    restart: "unless-stopped"
    networks:
      - internal
      - external
    volumes:
      - "peeper-grafana-data:/var/lib/grafana:rw"
      - "./my-grafana-provisioning/datasources:/etc/grafana/provisioning/datasources:ro"
    environment:
      GF_SECURITY_ADMIN_USER: "${PEEPER_USERNAME}"
      GF_SECURITY_ADMIN_PASSWORD: "${PEEPER_PASSWORD}"
      GF_SERVER_PROTOCOL: "https"
      GF_SERVER_ROOT_URL: "https://${PEEPER_HOST}"
      GF_AUTH_ANONYMOUS_ENABLED: "false"
      TZ: "${TIMEZONE}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: "10s"
      timeout: "5s"
      retries: "3"
    logging: *logging
 # peeper-grafana:
  #  image: "${PEEPER_REGISTRY}/peeper/peeper-grafana:${PEEPER_VERSION}"
   # container_name: "peeper-grafana"
    #hostname: "peeper-grafana"
   # depends_on:
     # peeper-metrics:
     #   condition: "service_healthy"
    #deploy:
     # resources:
      #  limits:
     #     cpus: "0.3"
    #      memory: "512m"
   # environment:
      #GF_SECURITY_ADMIN_USER: "${PEEPER_USERNAME}"
     # GF_SECURITY_ADMIN_PASSWORD: "${PEEPER_PASSWORD}"
    #  GF_SERVER_ROOT_URL: "https://${PEEPER_HOST}:${PEEPER_PORT}/"
   #   PEEPER_HOST: "${PEEPER_HOST}"
  #    PEEPER_PORT: "${PEEPER_PORT}"
 #     TZ: "${TIMEZONE}"
#    healthcheck:
     # test: ["CMD", "curl", "-f", "http://127.0.0.1:3000/api/health"]
     # interval: "5s"
      #timeout: "5s"
     # retries: "10"
    #logging: *logging
   # networks:
     # external:
    #  internal:
   # volumes:
  #    - "peeper-grafana-config:/etc/grafana:rw"
 #     - "peeper-grafana-data:/var/lib/grafana:rw"
#    restart: "unless-stopped"

  peeper-metrics:
    image: "${PEEPER_REGISTRY}/peeper/peeper-metrics:${PEEPER_VERSION}"
    container_name: "peeper-metrics"
    hostname: "peeper-metrics"
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "1g"
    environment:
      DOCKER_HOST: "${HOSTNAME}"
      DOCKER_SOCKET: "${DOCKER_SOCKET}"
      RETENTION_PERIOD: "${RETENTION_PERIOD}"
      TZ: "${TIMEZONE}"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:8428/-/healthy"]
      interval: "5s"
      timeout: "5s"
      retries: "10"
    logging: *logging
    networks:
      internal:
    volumes:
      - "${DOCKER_SOCKET}:${DOCKER_SOCKET}:ro"
      - "peeper-metrics-data:/data:rw"
    user: "root:${DOCKER_GID}"
    restart: "unless-stopped"

  peeper-proxy:
    image: "${PEEPER_REGISTRY}/peeper/peeper-proxy:${PEEPER_VERSION}"
    container_name: "peeper-proxy"
    hostname: "peeper-proxy"
    depends_on:
      peeper-metrics:
        condition: "service_healthy"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "256m"
    environment:
      TZ: "${TIMEZONE}"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1/health"]
      interval: "5s"
      timeout: "5s"
      retries: "10"
    logging: *logging
    networks:
      external:
      internal:
    ports:
      - "0.0.0.0:${PEEPER_PORT}:443"
    volumes:
      - "./certificates/crt:/usr/local/etc/ssl/private:ro"
    restart: "unless-stopped"

  peeper-provision:
    image: "${PEEPER_REGISTRY}/peeper/peeper-provision:${PEEPER_VERSION}"
    container_name: "peeper-provision"
    hostname: "peeper-provision"
    depends_on:
      peeper-grafana:
        condition: "service_healthy"
      peeper-proxy:
        condition: "service_healthy"
    environment:
      PEEPER_PORT: "${PEEPER_PORT}"
      TZ: "${TIMEZONE}"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    logging: *logging
    networks:
      external:
    volumes:
      - "./provisioning:/provisioning:ro"
      - "peeper-provision-data:/data:rw"
# my-server-puller:
 #   container_name: "my-server-puller"
  #  build: ./my-server-puller
   # networks:
    #  - internal # Достаточно внутренней сети
    # Пробрасываем всю файловую систему хоста для чтения
    #volumes:
     # - "/:/host:ro" 
    #restart: "unless-stopped"

  peeper-telegraf:
    image: "${PEEPER_REGISTRY}/peeper/peeper-telegraf:${PEEPER_VERSION}"
   container_name: "peeper-telegraf"
    hostname: "peeper-telegraf"
    depends_on:
      peeper-metrics:
        condition: "service_healthy"
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "256m"
   environment:
      AGENT_HOST: "peeper-metrics"
      AGENT_PORT: "8428"
      DOCKER_HOST: "${HOSTNAME}"
      DOCKER_SOCKET: "${DOCKER_SOCKET}"
      HOST_ETC: "/hostfs/etc"
      HOST_MOUNT_PREFIX: "/hostfs"
      HOST_PROC: "/hostfs/proc"
      HOST_RUN: "/hostfs/run"
      HOST_SYS: "/hostfs/sys"
      HOST_VAR: "/hostfs/var"
      TZ: "${TIMEZONE}"
    logging: *logging
    networks:
      internal:
    volumes:
      - "/:/hostfs:ro"
      - "/run/udev:/run/udev:ro"
      - "${DOCKER_SOCKET}:${DOCKER_SOCKET}:ro"
    privileged: true
    user: "telegraf:${DOCKER_GID}"
    restart: "unless-stopped"

networks:
  external:
    driver: "bridge"
    driver_opts:
      com.docker.network.bridge.name: "external"
    enable_ipv4: true
    enable_ipv6: false
    external: false
    internal: false
    ipam:
      driver: "default"
      config:
        - subnet: "172.20.0.0/20"
          ip_range: "172.20.8.0/21"
          gateway: "172.20.0.1"
    name: "external"
  internal:
    driver: "bridge"
    driver_opts:
      com.docker.network.bridge.name: "internal"
    enable_ipv4: true
    enable_ipv6: false
    external: false
    internal: true
    ipam:
      driver: "default"
      config:
        - subnet: "172.21.0.0/20"
          ip_range: "172.21.8.0/21"
          gateway: "172.21.0.1"
    name: "internal"

volumes:
  peeper-grafana-config:
    driver: "local"
    external: false
    name: "peeper-grafana-config"
  peeper-grafana-data:
    driver: "local"
    external: false
    name: "peeper-grafana-data"
  peeper-metrics-data:
    driver: "local"
    external: false
    name: "peeper-metrics-data"
  peeper-provision-data:
    driver: "local"
    external: false
    name: "peeper-provision-data"
